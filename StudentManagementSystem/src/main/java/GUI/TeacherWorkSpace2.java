/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import com.mycompany.studentmanagementsystem.DBcon;
import com.sun.source.tree.BreakTree;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
/**
 *
 * @author binit
 */
public class TeacherWorkSpace2 extends javax.swing.JFrame {
       DefaultTableModel tmodel=new DefaultTableModel();
    /**
     * Creates new form TeacherWorkSpace2
     */
    public TeacherWorkSpace2() {
        initComponents();
         btnhome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_black.png")));
         btnlogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout_black.png")));
        
                tmodel.setColumnCount(6);
                String[] titles={"Admission no","month","Combined Mathematics","Physics","Chemistry","Total","mark_id"};
                tmodel.setColumnIdentifiers(titles);
                // Get the TableColumnModel
//                TableColumnModel columnModel = tblmarks.getColumnModel();
//
//                // Hide the column by its index
//                columnModel.getColumn(6).setMinWidth(0); // Column index starts from 0
//                columnModel.getColumn(6).setMaxWidth(0);
//                columnModel.getColumn(6).setWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtadno = new javax.swing.JTextField();
        CBmnth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txttot = new javax.swing.JTextField();
        txtmath = new javax.swing.JTextField();
        txtphy = new javax.swing.JTextField();
        btncal = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnup = new javax.swing.JButton();
        btnclr = new javax.swing.JButton();
        txtchem = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmarks = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtsrchad = new javax.swing.JTextField();
        btnsrch = new javax.swing.JButton();
        btnhome = new javax.swing.JButton();
        btnlogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Marks", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel2.setText("Month");

        jLabel1.setText("Admission no");

        CBmnth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        CBmnth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBmnthActionPerformed(evt);
            }
        });

        jLabel7.setText("Combined Mathematics");

        jLabel9.setText("Chemistry");

        jLabel10.setText("Physics");

        jLabel11.setText("Total");

        txttot.setEditable(false);

        txtphy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphyActionPerformed(evt);
            }
        });

        btncal.setText("Calculate");
        btncal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalActionPerformed(evt);
            }
        });

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnup.setText("Update");
        btnup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupActionPerformed(evt);
            }
        });

        btnclr.setText("Clear");
        btnclr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclrActionPerformed(evt);
            }
        });

        txtchem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnup, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(btnclr, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtadno, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBmnth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmath, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtphy, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtchem, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txttot, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btncal, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtphy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btncal)
                            .addComponent(txtchem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtadno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBmnth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(39, 39, 39)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnclr, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnup, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 1050, 290));

        tblmarks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Admission no", "Month", "Combined Mathematics", "Physics", "Chemistry", "Total", "ID"
            }
        ));
        tblmarks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmarksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmarks);

        jLabel4.setText("Admission no");

        btnsrch.setText("Search");
        btnsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchActionPerformed(evt);
            }
        });

        btnhome.setBackground(new java.awt.Color(242, 242, 242));
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });

        btnlogout.setBackground(new java.awt.Color(242, 242, 242));
        btnlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnhome, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtsrchad, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnsrch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtsrchad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnsrch)))
                        .addComponent(btnhome, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 1032, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
    
        try{
              //reading the enetred values
                
                if(txtadno.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Admission number cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                      
                }
                if(txtmath.getText().isEmpty()||txtphy.getText().isEmpty()||txtchem.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Marks fields cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                 if(txttot.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Total field cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                     String month=CBmnth.getSelectedItem().toString();
                     float tot_mark=Float.parseFloat(txttot.getText());
                     int admission_no=Integer.parseInt(txtadno.getText());
                     float math_mark=Float.parseFloat(txtmath.getText());
                     float phy_mark=Float.parseFloat(txtphy.getText()); 
                     float chem_mark=Float.parseFloat(txtchem.getText());
                
         
            DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            PreparedStatement prestat1=con.prepareStatement("SELECT COUNT(*) FROM student WHERE admission_no=?");
            prestat1.setInt(1, admission_no);
            ResultSet rs=prestat1.executeQuery();
            
            if(rs.next()){
                int count=rs.getInt(1);
                
                  if (count > 0) {   //if admission number exists
                      
                      PreparedStatement prestat3=con.prepareStatement("SELECT COUNT(*) FROM marks WHERE admission_no = ? AND `Month` = ?");
                      prestat3.setInt(1, admission_no);
                      prestat3.setString(2, month);
                      ResultSet rs3=prestat3.executeQuery();
                      
                        if(rs3.next()){
                            int result=rs3.getInt(1);
                            if(result==0){
                       
                                    PreparedStatement prestat=con.prepareStatement("INSERT INTO marks (admission_no, `Month`, `Combined Mathematics`, Physics, Chemistry, Total) VALUES (?,?,?,?,?,?)",
                                     Statement.RETURN_GENERATED_KEYS);  // Use RETURN_GENERATED_KEYS to retrieve generated keys

                                    prestat.setInt(1, admission_no);
                                    prestat.setString(2, month);
                                    prestat.setFloat(3, math_mark);
                                    prestat.setFloat(4, phy_mark);
                                    prestat.setFloat(5, chem_mark);
                                    prestat.setFloat(6, tot_mark);

                                   prestat.executeUpdate();
                                   // Retrieve the generated keys (the marks_id)
                                    ResultSet generatedKeys = prestat.getGeneratedKeys();
                                    int marks_id=0;
                                    if (generatedKeys.next()) {
                                     marks_id = generatedKeys.getInt(1);  // Retrieve generated key

                                    }

                                tmodel.addRow(new Object[]{admission_no, month, math_mark,phy_mark,chem_mark,tot_mark,marks_id});

                                tblmarks.setModel(tmodel);
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Duplicate record: Admission number and month already exist.", "Error", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }                              
                    }
                    else {
                        // Admission number does not exist
                        JOptionPane.showMessageDialog(null, "Admission number does not exist.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }            
            }
                 

                
            
            txtadno.setText("");
            txtmath.setText("");
            txtchem.setText("");
            txtphy.setText("");
            txttot.setText("");
            

            


        }
        
           
             catch (SQLIntegrityConstraintViolationException ex) {
             JOptionPane.showMessageDialog(null, "Duplicate record: Admission number and month already exist.", "Error", JOptionPane.ERROR_MESSAGE);
        }
             catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
             catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Enter a valid number","error",JOptionPane.ERROR_MESSAGE);
        }
        
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnsaveActionPerformed

    private void txtphyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphyActionPerformed

    private void btncalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalActionPerformed
                String mathString=txtmath.getText();
                String phyString=txtphy.getText();
                String chemString=txtchem.getText();
                if(mathString.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Math mark cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
        
                float math_mark=Float.parseFloat(mathString);
                if(phyString.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Physics mark cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                float phy_mark=Float.parseFloat(phyString);
                
                if(chemString.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Chemistry mark cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                     return;
                }
                float chem_mark=Float.parseFloat(chemString);
                
                
                float tot=math_mark+phy_mark+chem_mark;
                txttot.setText(String.valueOf(tot));
    }//GEN-LAST:event_btncalActionPerformed

    private void btnclrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclrActionPerformed
            txtadno.setText("");
            txtmath.setText("");
            txtchem.setText("");
            txtphy.setText("");
            txttot.setText("");
            txtsrchad.setText("");
            tmodel.setRowCount(0); // Clears all rows
            
                   
    }//GEN-LAST:event_btnclrActionPerformed

    private void btnupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupActionPerformed
            btnsave.setEnabled(true);
             int selectedRow = tblmarks.getSelectedRow();
             if(selectedRow!=-1){
                       //get the admission number and mark_id frm the table row
                       int admission_no = Integer.parseInt(tblmarks.getValueAt(selectedRow, 0).toString());
                       int mark_id= Integer.parseInt(tblmarks.getValueAt(selectedRow, 6).toString());
                       try{
                           //regitser the drivers
              DBcon db = DBcon.getInstance();
             Connection con = db.getConnection();
           
              //reading the enetred values
                 if(txtadno.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Admission number cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                      
                }
                if(txtmath.getText().isEmpty()||txtphy.getText().isEmpty()||txtchem.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Marks fields cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if(txttot.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Total field cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                   
                  String month=CBmnth.getSelectedItem().toString();
                  float tot_mark=Float.parseFloat(txttot.getText().trim());
                
//                int admission_no=Integer.parseInt(txtadno.getText());
                  float math_mark=Float.parseFloat(txtmath.getText());
                  float phy_mark=Float.parseFloat(txtphy.getText()); 
                  float chem_mark=Float.parseFloat(txtchem.getText());
                            
            PreparedStatement prestat1=con.prepareStatement("SELECT COUNT(*) FROM student WHERE admission_no=?");
            prestat1.setInt(1, admission_no);
            ResultSet rs2=prestat1.executeQuery();
            
            if(rs2.next()){
                int count=rs2.getInt(1);
                
                         if (count > 0) {   //if admission number exists
                       //prepared statemt
                PreparedStatement prestat2=con.prepareStatement("UPDATE marks SET `Month`=?,`Combined Mathematics`=?,Physics=?,Chemistry=?,Total=? WHERE mark_id=?");
               
                prestat2.setString(1, month);
                prestat2.setFloat(2, math_mark);
                prestat2.setFloat(3, phy_mark);
                prestat2.setFloat(4, chem_mark);
                prestat2.setFloat(5, tot_mark);
                prestat2.setInt(6,mark_id);

               prestat2.executeUpdate();

               
//                tmodel.setColumnCount(6);
//                String[] titles={"Admission no","month","Combined Mathematics","Physics","Chemistry","Total"};
//                tmodel.setColumnIdentifiers(titles);
//
//                tmodel.addRow(new Object[]{admission_no, month, math_mark,phy_mark,chem_mark,tot_mark});
//            
//                tblmarks.setModel(tmodel);

                     // Update the JTable row values
                    tmodel.setValueAt(month, selectedRow, 1);
                    tmodel.setValueAt(math_mark, selectedRow, 2);
                    tmodel.setValueAt(phy_mark, selectedRow, 3);
                    tmodel.setValueAt(chem_mark, selectedRow, 4);
                    tmodel.setValueAt(tot_mark, selectedRow, 5);

                    JOptionPane.showMessageDialog(null, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                       } 
                
                 else {
                // Admission number does not exist
                JOptionPane.showMessageDialog(null, "Admission number does not exist.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            
               }
        txtadno.setText("");
        txtmath.setText("");
        txtphy.setText("");
        txtchem.setText("");
        txttot.setText("");
      
                       
                       
          }
                       
             
             catch (SQLIntegrityConstraintViolationException ex) {
             JOptionPane.showMessageDialog(null, "Duplicate record: Admission number and month already exist.", "Error", JOptionPane.ERROR_MESSAGE);
        }
             catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
             catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Enter a valid number","error",JOptionPane.ERROR_MESSAGE);
        }
                       
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
             
             }
    }//GEN-LAST:event_btnupActionPerformed

    private void tblmarksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmarksMouseClicked
      
        int selectedRow = tblmarks.getSelectedRow();
        if(selectedRow!=-1){
            
             // Clear fields before updating
        txtadno.setText("");
        txtmath.setText("");
        txtphy.setText("");
        txtchem.setText("");
        txttot.setText("");
      

        // Disable the save button
        btnsave.setEnabled(false);
        
            //get the admission number frm the table row
            int mark_id = Integer.parseInt(tblmarks.getValueAt(selectedRow, 6).toString());
            try{
                DBcon db = DBcon.getInstance();
                Connection con = db.getConnection();
           
                //create statement object
                PreparedStatement prestat=con.prepareStatement("SELECT * FROM marks WHERE mark_id=?");
                prestat.setInt(1,mark_id);
                ResultSet rs=prestat.executeQuery();

                if(rs.next())
                {
                    txtadno.setText(String.valueOf(rs.getInt("admission_no")));
                    txtmath.setText(String.valueOf(rs.getFloat("Combined Mathematics")));
                    txtphy.setText(String.valueOf(rs.getFloat("Physics")));
                    txtchem.setText(String.valueOf(rs.getFloat("Chemistry")));
                    //txttot.setText(String.valueOf(rs.getFloat("Total")));
                    CBmnth.setSelectedItem(rs.getString("Month"));
                }

            }
          
            catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(null, "Duplicate record: Admission number and month already exist.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
            }
            catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "Enter a valid number","error",JOptionPane.ERROR_MESSAGE);
            }
            
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_tblmarksMouseClicked

    private void btnsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchActionPerformed
            if(txtsrchad.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter an admission number to search.", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
            }
            try{
           
             int adm_no=Integer.parseInt(txtsrchad.getText());
    
             DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            
         
            //create statement object
            PreparedStatement prestat=con.prepareStatement("SELECT * FROM marks WHERE admission_no=?");
            prestat.setInt(1, adm_no);
            ResultSet rs=prestat.executeQuery();
            
            //check if result set is not empty
             if (!rs.isBeforeFirst()) {
            JOptionPane.showMessageDialog(null, "No record found for admission number: " + adm_no, "Information", JOptionPane.INFORMATION_MESSAGE);
            return;         // Exit the method if no records are found
        }
            
           
//            tmodel.setColumnCount(7);
//            String[] Titles={"Admission no","Full Name","Initials","Grade","DOB","Address","Father","Mother","Telephone"};
//            tmodel.setColumnIdentifiers(Titles);

                    // Clear existing rows in the table model
                    tmodel.setRowCount(0);

                while(rs.next()){
                 Object records[]=new Object[7];
                 records[0]=rs.getInt("admission_no");
                 records[1]=rs.getString("Month");
                 records[2]=rs.getFloat("Combined Mathematics");
                 records[3]=rs.getFloat("Physics");
                 records[4]=rs.getFloat("Chemistry");
                 records[5]=rs.getFloat("Total");
                 records[6]=rs.getInt("mark_id");
                 
//                 DefaultTableModel tmodel=new DefaultTableModel();
                 tmodel.addRow(records);
                 
             }
                tblmarks.setModel(tmodel);
            
            }
            
             
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
            catch(NumberFormatException ex){
                 JOptionPane.showMessageDialog(null, "Enter a valid number","error",JOptionPane.ERROR_MESSAGE);
            }
            
            catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsrchActionPerformed

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
        Home_Teacher hme=new Home_Teacher();
        hme.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogoutActionPerformed
        loginPage logout=new loginPage();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnlogoutActionPerformed

    private void CBmnthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBmnthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBmnthActionPerformed

    private void txtchemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtchemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherWorkSpace2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBmnth;
    private javax.swing.JButton btncal;
    private javax.swing.JButton btnclr;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnlogout;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsrch;
    private javax.swing.JButton btnup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblmarks;
    private javax.swing.JTextField txtadno;
    private javax.swing.JTextField txtchem;
    private javax.swing.JTextField txtmath;
    private javax.swing.JTextField txtphy;
    private javax.swing.JTextField txtsrchad;
    private javax.swing.JTextField txttot;
    // End of variables declaration//GEN-END:variables
}
