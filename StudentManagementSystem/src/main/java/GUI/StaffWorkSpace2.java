/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;


import GUI.StaffWorkSpace;
import com.mycompany.studentmanagementsystem.DBcon;
import com.mycompany.studentmanagementsystem.userSession;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.awt.event.*;
import java.text.SimpleDateFormat;

/**
 *
 * @author binit
 */
public class StaffWorkSpace2 extends javax.swing.JFrame {

    /**
     * Creates new form StaffWorkSpace2
     */
    private JPopupMenu popupMenu;
    public StaffWorkSpace2() {
        initComponents();
         btnhome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_black.png")));
         btnlogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout_black.png")));


        fillTableContent();
        popupMenu = new JPopupMenu();

        // Create menu items
        JMenuItem editMenuItem = new JMenuItem("Edit");
        JMenuItem deleteMenuItem = new JMenuItem("Delete");

        popupMenu.add(editMenuItem);
        popupMenu.add(deleteMenuItem);
        
        editMenuItem.addActionListener(e -> editAction());
        deleteMenuItem.addActionListener(e -> deleteAction());
        
       String usertype=userSession.getInstance().getuUserType();
       if(usertype=="Teacher"){
           btnadd.setVisible(false);
       }
               }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablest = new javax.swing.JTable();
        btnhome = new javax.swing.JButton();
        btnlogout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtsearchad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnsrchadm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtsrchname = new javax.swing.JTextField();
        btnsrchname = new javax.swing.JButton();
        btnlist = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tablest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        tablest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablestMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablest);

        btnhome.setBackground(new java.awt.Color(242, 242, 242));
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });

        btnlogout.setBackground(new java.awt.Color(242, 242, 242));
        btnlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnhome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnhome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtsearchad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Admission Number ");

        btnsrchadm.setText("Search");
        btnsrchadm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchadmActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        txtsrchname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsrchnameActionPerformed(evt);
            }
        });

        btnsrchname.setText("Search");
        btnsrchname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchnameActionPerformed(evt);
            }
        });

        btnlist.setText("View all students");
        btnlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlistActionPerformed(evt);
            }
        });

        btnadd.setText("Add New Student");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtsearchad, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnlist, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnsrchadm)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtsrchname, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnsrchname)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtsearchad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsrchadm)
                    .addComponent(jLabel2)
                    .addComponent(txtsrchname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsrchname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnlist, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsrchadmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchadmActionPerformed
        
       
        
            try{
             txtsrchname.setText("");
             int adm_no=Integer.parseInt(txtsearchad.getText());
    
            DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
         
            //create statement object
            PreparedStatement prestat=con.prepareStatement("SELECT * FROM student WHERE admission_no=?");
            prestat.setInt(1, adm_no);
            ResultSet rs=prestat.executeQuery();
            
            //check if result set is not empty
             if (!rs.isBeforeFirst()) {
            JOptionPane.showMessageDialog(null, "No record found for admission number: " + adm_no, "Information", JOptionPane.INFORMATION_MESSAGE);
            return;         // Exit the method if no records are found
        }
            
            DefaultTableModel tmodel=new DefaultTableModel();
            tmodel.setColumnCount(9);
            String[] Titles={"Admission no","branch ID","Full Name","Initials","DOB","Address","Father","Mother","Telephone"};
            tmodel.setColumnIdentifiers(Titles);
            
                while(rs.next()){
                 Object records[]=new Object[9];
                 records[0]=rs.getInt("admission_no");
                 records[1]=rs.getString("branch_id");
                 records[2]=rs.getString("fname");
                 records[3]=rs.getString("iniName");
                 records[4]=rs.getDate("DOB");
                 records[5]=rs.getString("Address");
                 records[6]=rs.getString("Father");
                 records[7]=rs.getString("Mother");
                 records[8]=rs.getString("TP");
                 tmodel.addRow(records);
                 
             }
                tablest.setModel(tmodel);
            
            }
            
         
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
             catch(NumberFormatException ex){
                 JOptionPane.showMessageDialog(null, "Enter a valid number","error",JOptionPane.ERROR_MESSAGE);
            }
            
             catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsrchadmActionPerformed

    private void txtsearchadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchadActionPerformed

    private void txtsrchnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsrchnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsrchnameActionPerformed

    private void btnsrchnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchnameActionPerformed
            
            
            try{
            txtsearchad.setText("");
            String name=txtsrchname.getText();
    
            DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            
         
            //create statement object
            PreparedStatement prestat=con.prepareStatement("SELECT * FROM student WHERE fname LIKE ?");
            prestat.setString(1, "%"+name+"%");
            ResultSet rs=prestat.executeQuery();
            
            //check if result set is not empty
             if (!rs.isBeforeFirst()) {
            JOptionPane.showMessageDialog(null, "No record found", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;         // Exit the method if no records are found
        }
            
            DefaultTableModel tmodel=new DefaultTableModel();
            tmodel.setColumnCount(9);
            String[] Titles={"Admission no","branch id","Full Name","Initials","DOB","Address","Father","Mother","Telephone"};
            tmodel.setColumnIdentifiers(Titles);
            
                while(rs.next()){
                 Object records[]=new Object[9];
                 records[0]=rs.getInt("admission_no");
                 records[1]=rs.getInt("branch_id");
                 records[2]=rs.getString("fname");
                 records[3]=rs.getString("iniName");
                 records[4]=rs.getDate("DOB");
                 records[5]=rs.getString("Address");
                 records[6]=rs.getString("Father");
                 records[7]=rs.getString("Mother");
                 records[8]=rs.getString("TP");
                 tmodel.addRow(records);
                 
             }
                tablest.setModel(tmodel);
            
            }
            
            
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }   
            catch(NumberFormatException ex){
                 JOptionPane.showMessageDialog(null, "Enter a valid name","error",JOptionPane.ERROR_MESSAGE);
            }
            
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsrchnameActionPerformed

    private void btnlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlistActionPerformed
        fillTableContent();
    }//GEN-LAST:event_btnlistActionPerformed

    private void tablestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablestMouseClicked
             
            // Right-click
            int row = tablest.rowAtPoint(evt.getPoint());
            if (row != -1) {
                tablest.setRowSelectionInterval(row, row); // Select the row
                popupMenu.show(evt.getComponent(), evt.getX(), evt.getY()); // Show the menu
            }
        
    }//GEN-LAST:event_tablestMouseClicked

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
        String userType=userSession.getInstance().getuUserType();
       if(userType=="Admin"){
        Home_Admin hme=new Home_Admin();
        hme.setVisible(true);
        this.setVisible(false);
       }
       else if(userType=="Teacher"){
        Home_Teacher hme=new Home_Teacher();
        hme.setVisible(true);
        this.setVisible(false);
       }
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogoutActionPerformed
        loginPage logout=new loginPage();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnlogoutActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        StaffWorkSpace add=new StaffWorkSpace();
        add.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnaddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffWorkSpace2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffWorkSpace2().setVisible(true);
            }
        });
    }
    
    public void fillTableContent(){
             try{
             DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            
         
            //create statement object
            Statement stmt=con.createStatement();
            ResultSet rs=stmt.executeQuery("SELECT * FROM student");
       
            //displaying the result
                 DefaultTableModel tmodel=new DefaultTableModel();
                 tmodel.setColumnCount(9);
                 String[] Titles={"Admission no","branch id","Full Name","Initials","DOB","Address","Father","Mother","Telephone"};
                 tmodel.setColumnIdentifiers(Titles);
                 
             //add rows
             while(rs.next()){
                 Object records[]=new Object[9];
                 records[0]=rs.getInt("admission_no");
                 records[1]=rs.getInt("branch_id");
                 records[2]=rs.getString("fname");
                 records[3]=rs.getString("iniName");
                 records[4]=rs.getDate("DOB");
                 records[5]=rs.getString("Address");
                 records[6]=rs.getString("Father");
                 records[7]=rs.getString("Mother");
                 records[8]=rs.getString("TP");
                 
                 tmodel.addRow(records);
                 
             }
             tablest.setModel(tmodel);
            
    }
                
         
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
             
             catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void deleteAction(){
        int row=tablest.getSelectedRow();
         if(row==-1){
             JOptionPane.showMessageDialog(null, "Please select a record to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
        return;
    
       }
         //get admission number of the selected row
         
         int admission_no=(int)tablest.getValueAt(row,0);
         
          int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
          if (confirm != JOptionPane.YES_OPTION) {
             return; // Exit 
    }
           try{
             DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            //deletng student frm marks and fees table
            PreparedStatement prestat2=con.prepareCall("DELETE FROM marks WHERE admission_no=?");
            prestat2.setInt(1, admission_no);
            prestat2.executeUpdate();
            
            PreparedStatement prestat3=con.prepareCall("DELETE FROM fees WHERE admission_no=?");
            prestat3.setInt(1, admission_no);
            prestat3.executeUpdate();
            
            
         
            //create statement object
            PreparedStatement prestat=con.prepareCall("DELETE FROM student WHERE admission_no=?");
            prestat.setInt(1, admission_no);
            int ret= prestat.executeUpdate();
            if(ret>0){
             JOptionPane.showMessageDialog(null, "Record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);  
              DefaultTableModel tmodel = (DefaultTableModel) tablest.getModel();
              tmodel.removeRow(row);
            }
            else{
                JOptionPane.showMessageDialog(null, "Failed to delete the record.", "Error", JOptionPane.ERROR_MESSAGE);
        
            }
           }
          
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
           
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
          
    }
    private void editAction(){
            String branch=null;

            int selectedRow = tablest.getSelectedRow();
            if (selectedRow != -1) {
            // Get the admission no from the table row
            int admission_no = Integer.parseInt(tablest.getValueAt(selectedRow, 0).toString());
         try{
             DBcon db = DBcon.getInstance();
            Connection con = db.getConnection();
           
            //create statement object
            PreparedStatement prestat=con.prepareStatement("SELECT * FROM student WHERE admission_no=?");
        
            prestat.setInt(1, admission_no);
            ResultSet rs=prestat.executeQuery();
            if(rs.next()){
            //convertng branch_id to branch name
            int branch_id=rs.getInt("branch_id");
            PreparedStatement prestat2=con.prepareStatement("SELECT branchName from branch WHERE branch_id=?");
            prestat2.setInt(1, branch_id);
            ResultSet rs2=prestat2.executeQuery();
            
            if(rs2.next()){
            branch=rs2.getString("branchName");
            }
            else{
                  JOptionPane.showMessageDialog(null, "Branch not found for branch_id: " + branch_id, "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            
            StaffWorkSpace update=new StaffWorkSpace();
            update.setVisible(true);
            this.setVisible(false);
            update.getaddstudentbtn().setVisible(false);          
            update.getbtnup().setVisible(true);
//            JButton btnup=new JButton("Update");           
//            btnup.setBounds(138, 30, 250, 50);
//            update.setLayout(null);
//            update.add(btnup);
//            update.revalidate();
//            update.repaint();
//            update.setVisible(true);

            
               //populating the text fields
            
                update.setAdmissionNo(String.valueOf(admission_no));
                update.setbranchName(branch);
                update.setFname(rs.getString("fname"));
                update.setIniname(rs.getString("iniName"));
                update.setDOB(String.valueOf(rs.getDate("DOB")));
                update.setAddress(rs.getString("Address"));
                update.setFather(rs.getString("Father"));
                update.setMother(rs.getString("Mother"));
                update.setTP(rs.getString("TP"));
            }else{
                
               JOptionPane.showMessageDialog(null, "No student found with this admission number", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
         }
         
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "SQL error","error",JOptionPane.ERROR_MESSAGE);
        }
         
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error Occured"+ex.toString(),"error",JOptionPane.ERROR_MESSAGE);
        }
         
            

            }
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnlist;
    private javax.swing.JButton btnlogout;
    private javax.swing.JButton btnsrchadm;
    private javax.swing.JButton btnsrchname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablest;
    private javax.swing.JTextField txtsearchad;
    private javax.swing.JTextField txtsrchname;
    // End of variables declaration//GEN-END:variables
}
